This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Lely core libraries configure 2.3.0, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ../configure --host=arm-none-eabi --disable-shared --disable-tools --disable-tests --disable-python --disable-threads --disable-daemon

## --------- ##
## Platform. ##
## --------- ##

hostname = precision
uname -m = x86_64
uname -r = 5.7.0-1-amd64
uname -s = Linux
uname -v = #1 SMP Debian 5.7.6-1 (2020-06-24)

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/bin
PATH: /usr/bin
PATH: /bin
PATH: /usr/local/games
PATH: /usr/games


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2742: checking build system type
configure:2756: result: x86_64-pc-linux-gnu
configure:2776: checking host system type
configure:2789: result: arm-none-eabi
configure:2809: checking target system type
configure:2822: result: arm-none-eabi
configure:2864: checking for a BSD-compatible install
configure:2932: result: /usr/bin/install -c
configure:2943: checking whether build environment is sane
configure:2998: result: yes
configure:3055: checking for arm-none-eabi-strip
configure:3071: found /usr/bin/arm-none-eabi-strip
configure:3082: result: arm-none-eabi-strip
configure:3147: checking for a thread-safe mkdir -p
configure:3186: result: /usr/bin/mkdir -p
configure:3193: checking for gawk
configure:3223: result: no
configure:3193: checking for mawk
configure:3209: found /usr/bin/mawk
configure:3220: result: mawk
configure:3231: checking whether make sets $(MAKE)
configure:3253: result: yes
configure:3282: checking whether make supports nested variables
configure:3299: result: yes
configure:3427: checking whether to enable maintainer-specific portions of Makefiles
configure:3436: result: yes
configure:3460: checking whether make supports nested variables
configure:3477: result: yes
configure:3489: checking for a sed that does not truncate output
configure:3553: result: /usr/bin/sed
configure:3571: checking whether to build with code coverage support
configure:3591: result: no
configure:3958: checking for valgrind
configure:3974: found /usr/bin/valgrind
configure:3985: result: valgrind
configure:4039: checking for Valgrind tool memcheck
configure:4054: result: yes
configure:4095: checking for Valgrind tool helgrind
configure:4110: result: yes
configure:4151: checking for Valgrind tool drd
configure:4166: result: yes
configure:4207: checking for Valgrind tool sgcheck
configure:4222: result: no
configure:4359: checking whether make supports the include directive
configure:4374: make -f confmf.GNU && cat confinc.out
this is the am__doit target
configure:4377: $? = 0
configure:4396: result: yes (GNU style)
configure:4426: checking for arm-none-eabi-gcc
configure:4442: found /usr/bin/arm-none-eabi-gcc
configure:4453: result: arm-none-eabi-gcc
configure:4722: checking for C compiler version
configure:4731: arm-none-eabi-gcc --version >&5
arm-none-eabi-gcc (15:8-2019-q3-1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027]
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:4742: $? = 0
configure:4731: arm-none-eabi-gcc -v >&5
Using built-in specs.
COLLECT_GCC=arm-none-eabi-gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/arm-none-eabi/8.3.1/lto-wrapper
Target: arm-none-eabi
Configured with: ../configure --build=x86_64-linux-gnu --prefix=/usr --includedir='/usr/lib/include' --mandir='/usr/lib/share/man' --infodir='/usr/lib/share/info' --sysconfdir=/etc --localstatedir=/var --disable-silent-rules --libdir='/usr/lib/lib/x86_64-linux-gnu' --libexecdir='/usr/lib/lib/x86_64-linux-gnu' --disable-maintainer-mode --disable-dependency-tracking --mandir=/usr/share/man --enable-languages=c,c++,lto --enable-multilib --disable-decimal-float --disable-libffi --disable-libgomp --disable-libmudflap --disable-libquadmath --disable-libssp --disable-libstdcxx-pch --disable-nls --disable-shared --disable-threads --enable-tls --build=x86_64-linux-gnu --target=arm-none-eabi --with-system-zlib --with-gnu-as --with-gnu-ld --with-pkgversion=15:8-2019-q3-1 --without-included-gettext --prefix=/usr/lib --infodir=/usr/share/doc/gcc-arm-none-eabi/info --htmldir=/usr/share/doc/gcc-arm-none-eabi/html --pdfdir=/usr/share/doc/gcc-arm-none-eabi/pdf --bindir=/usr/bin --libexecdir=/usr/lib --libdir=/usr/lib --disable-libstdc++-v3 --host=x86_64-linux-gnu --with-headers=no --without-newlib --with-multilib-list=rmprofile CFLAGS='-g -O2 -fdebug-prefix-map=/build/gcc-arm-none-eabi-kAmV5m/gcc-arm-none-eabi-8-2019-q3=. -fstack-protector-strong' CPPFLAGS='-Wdate-time -D_FORTIFY_SOURCE=2' CXXFLAGS='-g -O2 -fdebug-prefix-map=/build/gcc-arm-none-eabi-kAmV5m/gcc-arm-none-eabi-8-2019-q3=. -fstack-protector-strong' FCFLAGS='-g -O2 -fdebug-prefix-map=/build/gcc-arm-none-eabi-kAmV5m/gcc-arm-none-eabi-8-2019-q3=. -fstack-protector-strong' FFLAGS='-g -O2 -fdebug-prefix-map=/build/gcc-arm-none-eabi-kAmV5m/gcc-arm-none-eabi-8-2019-q3=. -fstack-protector-strong' GCJFLAGS='-g -O2 -fdebug-prefix-map=/build/gcc-arm-none-eabi-kAmV5m/gcc-arm-none-eabi-8-2019-q3=. -fstack-protector-strong' LDFLAGS=-Wl,-z,relro OBJCFLAGS='-g -O2 -fdebug-prefix-map=/build/gcc-arm-none-eabi-kAmV5m/gcc-arm-none-eabi-8-2019-q3=. -fstack-protector-strong' OBJCXXFLAGS='-g -O2 -fdebug-prefix-map=/build/gcc-arm-none-eabi-kAmV5m/gcc-arm-none-eabi-8-2019-q3=. -fstack-protector-strong' INHIBIT_LIBC_CFLAGS=-DUSE_TM_CLONE_REGISTRY=0 AR_FOR_TARGET=arm-none-eabi-ar AS_FOR_TARGET=arm-none-eabi-as LD_FOR_TARGET=arm-none-eabi-ld NM_FOR_TARGET=arm-none-eabi-nm OBJDUMP_FOR_TARGET=arm-none-eabi-objdump RANLIB_FOR_TARGET=arm-none-eabi-ranlib READELF_FOR_TARGET=arm-none-eabi-readelf STRIP_FOR_TARGET=arm-none-eabi-strip
Thread model: single
gcc version 8.3.1 20190703 (release) [gcc-8-branch revision 273027] (15:8-2019-q3-1) 
configure:4742: $? = 0
configure:4731: arm-none-eabi-gcc -V >&5
arm-none-eabi-gcc: error: unrecognized command line option '-V'
arm-none-eabi-gcc: fatal error: no input files
compilation terminated.
configure:4742: $? = 1
configure:4731: arm-none-eabi-gcc -qversion >&5
arm-none-eabi-gcc: error: unrecognized command line option '-qversion'; did you mean '--version'?
arm-none-eabi-gcc: fatal error: no input files
compilation terminated.
configure:4742: $? = 1
configure:4762: checking whether the C compiler works
configure:4784: arm-none-eabi-gcc    conftest.c  >&5
/usr/lib/gcc/arm-none-eabi/8.3.1/../../../arm-none-eabi/bin/ld: /usr/lib/gcc/arm-none-eabi/8.3.1/../../../arm-none-eabi/lib/libc.a(lib_a-exit.o): in function `exit':
/build/newlib-kGgvwE/newlib-3.3.0/build/arm-none-eabi/newlib/libc/stdlib/../../../../../newlib/libc/stdlib/exit.c:64: undefined reference to `_exit'
collect2: error: ld returned 1 exit status
configure:4788: $? = 1
configure:4826: result: no
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Lely core libraries"
| #define PACKAGE_TARNAME "lely-core"
| #define PACKAGE_VERSION "2.3.0"
| #define PACKAGE_STRING "Lely core libraries 2.3.0"
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "lely-core"
| #define VERSION "2.3.0"
| /* end confdefs.h.  */
| 
| int
| main ()
| {
| 
|   ;
|   return 0;
| }
configure:4831: error: in `/home/joachim/eclipse-workspace/lely-core/build':
configure:4833: error: C compiler cannot create executables
See `config.log' for more details

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-pc-linux-gnu
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPPUTEST_CFLAGS_set=
ac_cv_env_CPPUTEST_CFLAGS_value=
ac_cv_env_CPPUTEST_LIBS_set=
ac_cv_env_CPPUTEST_LIBS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_LT_SYS_LIBRARY_PATH_set=
ac_cv_env_LT_SYS_LIBRARY_PATH_value=
ac_cv_env_PKG_CONFIG_LIBDIR_set=
ac_cv_env_PKG_CONFIG_LIBDIR_value=
ac_cv_env_PKG_CONFIG_PATH_set=
ac_cv_env_PKG_CONFIG_PATH_value=
ac_cv_env_PKG_CONFIG_set=
ac_cv_env_PKG_CONFIG_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=arm-none-eabi
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_host=arm-none-eabi
ac_cv_path_SED=/usr/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_mkdir=/usr/bin/mkdir
ac_cv_prog_AWK=mawk
ac_cv_prog_CC=arm-none-eabi-gcc
ac_cv_prog_STRIP=arm-none-eabi-strip
ac_cv_prog_VALGRIND=valgrind
ac_cv_prog_make_make_set=yes
ac_cv_target=arm-none-eabi
am_cv_make_support_nested_variables=yes
ax_cv_valgrind_tool_drd=yes
ax_cv_valgrind_tool_helgrind=yes
ax_cv_valgrind_tool_memcheck=yes
ax_cv_valgrind_tool_sgcheck=no

## ----------------- ##
## Output variables. ##
## ----------------- ##




























		$(foreach tool, $(valgrind_enabled_tools), check-valgrind-$(tool))
		LOG_COMPILER="$$(VALGRIND_LOG_COMPILER)" \
		LOG_FLAGS="$$(valgrind_$(1)_flags)" \
		TESTS_ENVIRONMENT="$$(VALGRIND_TESTS_ENVIRONMENT)" \
		TEST_SUITE_LOG=test-suite-$(1).log
	$$(valgrind_v_use)$$(MAKE) check-TESTS \
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -k \
	$(TESTS_ENVIRONMENT) \
	$(VALGRIND) $(VALGRIND_SUPPRESSIONS) --error-exitcode=1 $(VALGRIND_FLAGS)
	$(valgrind_lt) \
	@echo "Need to reconfigure with --enable-code-coverage"
	@echo "Need to reconfigure with --enable-code-coverage"
	@echo "Need to reconfigure with --enable-valgrind"
	@echo "Need to reconfigure with --enable-valgrind"
	@echo "Need to reconfigure with --enable-valgrind-$(1)"
	G_DEBUG=fatal-warnings,fatal-criticals,gc-friendly
	G_SLICE=always-malloc,debug-blocks \
	env VALGRIND=$(VALGRIND) \
 $(CODE_COVERAGE_IGNORE_PATTERN);
 $(CODE_COVERAGE_OUTPUT_FILE);
#
#
#
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage)
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info)
#    (Default: $(top_builddir))
#    (Default: --num-callers=30)
#    (Default: empty)
#    Multiple directories may be specified, separated by whitespace.
#    by lcov for code coverage. (Default:
#    collecting lcov instance. (Default: $CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH)
#    files to load. (Default: empty)
#    genhtml instance. (Default: based on $CODE_COVERAGE_BRANCH_COVERAGE)
#    instance. (Default: $CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT)
#    instance. (Default: $CODE_COVERAGE_LCOV_OPTIONS_DEFAULT)
#    instance. (Default: $CODE_COVERAGE_LCOV_RMOPTS_DEFAULT)
#    instances. (Default: $CODE_COVERAGE_LCOV_SHOPTS_DEFAULT)
#    instances. (Default: based on $CODE_COVERAGE_BRANCH_COVERAGE)
#    lcov instance. (Default: empty)
#    memcheck, helgrind, drd, sgcheck). (Default: various)
#    reports to be created. (Default:
#    set to 0 to disable it and leave empty to stay with the default.
#  - CODE_COVERAGE_BRANCH_COVERAGE: Set to 1 to enforce branch coverage,
#  - CODE_COVERAGE_DIRECTORY: Top-level directory for code coverage reporting.
#  - CODE_COVERAGE_GENHTML_OPTIONS: Extra options to pass to the genhtml
#  - CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT: Extra options to pass to the
#  - CODE_COVERAGE_IGNORE_PATTERN: Extra glob pattern of files to ignore
#  - CODE_COVERAGE_LCOV_OPTIONS: Extra options to pass to the collecting lcov
#  - CODE_COVERAGE_LCOV_OPTIONS_DEFAULT: Extra options to pass to the
#  - CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH: --gcov-tool pathtogcov
#  - CODE_COVERAGE_LCOV_RMOPTS: Extra options to pass to the filtering lcov
#  - CODE_COVERAGE_LCOV_RMOPTS_DEFAULT: Extra options to pass to the filtering
#  - CODE_COVERAGE_LCOV_SHOPTS: Extra options to shared between both lcov
#  - CODE_COVERAGE_LCOV_SHOPTS_DEFAULT: Extra options shared between both lcov
#  - CODE_COVERAGE_OUTPUT_DIRECTORY: Directory for generated code coverage
#  - CODE_COVERAGE_OUTPUT_FILE: Filename and path for the .info file generated
#  - VALGRIND_$toolname_FLAGS: Flags to pass to Valgrind $toolname (one of:
#  - VALGRIND_FLAGS: General flags to pass to all Valgrind tools.
#  - VALGRIND_SUPPRESSIONS_FILES: Space-separated list of Valgrind suppressions
# $(PACKAGE_VERSION). In order to add the current git hash to the title,
# Capture baseline coverage data
# Capture code coverage data
# Code coverage
# Hook rule executed before code-coverage-capture, overridable by the user
# Internal use
# Optional variables
# Optional variables
# Optional:
# Optional:
# Support running with and without libtool.
# The generated report will be titled using the $(PACKAGE_NAME) and
# Use recursive makes in order to ignore errors during check
# Use recursive makes in order to ignore errors during check
# Valgrind check
# Valgrind running
# sanitizes the test-name: replaces with underscores: dashes and dots
# use the git-version-gen script, available online.
$(foreach tool,$(valgrind_tools),$(eval $(call valgrind_tool_rule,$(tool))))
$(if $(CODE_COVERAGE_BRANCH_COVERAGE),\
'
'
--rc genhtml_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
--rc lcov_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
.PHONY: check-code-coverage code-coverage-capture code-coverage-capture-hook code-coverage-clean
.PHONY: check-valgrind $(add-prefix check-valgrind-,$(valgrind_tools))
ACLOCAL='${SHELL} /home/joachim/eclipse-workspace/lely-core/missing aclocal-1.16'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='0'
AM_DISTCHECK_CONFIGURE_FLAGS += --disable-code-coverage
AM_DISTCHECK_CONFIGURE_FLAGS += --disable-valgrind
AM_DISTCHECK_CONFIGURE_FLAGS ?=
AM_DISTCHECK_CONFIGURE_FLAGS ?=
AM_V='$(V)'
AR=''
AS=''
AUTOCONF='${SHELL} /home/joachim/eclipse-workspace/lely-core/missing autoconf'
AUTOHEADER='${SHELL} /home/joachim/eclipse-workspace/lely-core/missing autoheader'
AUTOMAKE='${SHELL} /home/joachim/eclipse-workspace/lely-core/missing automake-1.16'
AWK='mawk'
BINFMT_EXEC=''
CC='arm-none-eabi-gcc'
CCDEPMODE=''
CFLAGS=''
CODE_COVERAGE_BRANCH_COVERAGE ?=
CODE_COVERAGE_CFLAGS=''
CODE_COVERAGE_CPPFLAGS=''
CODE_COVERAGE_CXXFLAGS=''
CODE_COVERAGE_DIRECTORY ?= $(top_builddir)
CODE_COVERAGE_ENABLED='no'
CODE_COVERAGE_ENABLED_FALSE=''
CODE_COVERAGE_ENABLED_TRUE='#'
CODE_COVERAGE_GENHTML_OPTIONS ?= $(CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT)
CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT ?=\
CODE_COVERAGE_IGNORE_PATTERN ?=
CODE_COVERAGE_LCOV_OPTIONS ?= $(CODE_COVERAGE_LCOV_OPTIONS_DEFAULT)
CODE_COVERAGE_LCOV_OPTIONS_DEFAULT ?= $(CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH)
CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH ?= --gcov-tool "$(GCOV)"
CODE_COVERAGE_LCOV_RMOPTS ?= $(CODE_COVERAGE_LCOV_RMOPTS_DEFAULT)
CODE_COVERAGE_LCOV_RMOPTS_DEFAULT ?=
CODE_COVERAGE_LCOV_SHOPTS ?= $(CODE_COVERAGE_LCOV_SHOPTS_DEFAULT)
CODE_COVERAGE_LCOV_SHOPTS_DEFAULT ?= $(if $(CODE_COVERAGE_BRANCH_COVERAGE),\
CODE_COVERAGE_LDFLAGS=''
CODE_COVERAGE_LIBS=''
CODE_COVERAGE_OUTPUT_DIRECTORY ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage
CODE_COVERAGE_OUTPUT_FILE ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info
CODE_COVERAGE_RULES='
CPP=''
CPPFLAGS=''
CPPUTEST_CFLAGS=''
CPPUTEST_LIBS=''
CXX=''
CXXCPP=''
CXXDEPMODE=''
CXXFLAGS=''
CYGPATH_W='echo'
DEFS=''
DEPDIR='.deps'
DLLTOOL=''
DOXYGEN=''
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP=''
ENABLE_SHARED_FALSE=''
ENABLE_SHARED_TRUE=''
ENABLE_VALGRIND_drd='yes'
ENABLE_VALGRIND_helgrind='yes'
ENABLE_VALGRIND_memcheck='yes'
ENABLE_VALGRIND_sgcheck='no'
EXEEXT=''
FGREP=''
GCOV=''
GENHTML=''
GITIGNOREFILES += $(CODE_COVERAGE_OUTPUT_FILE) $(CODE_COVERAGE_OUTPUT_DIRECTORY)
GITIGNOREFILES ?=
GREP=''
HAVE_CXX11=''
HAVE_DOXYGEN_FALSE=''
HAVE_DOXYGEN_TRUE=''
HAVE_IXXAT_FALSE=''
HAVE_IXXAT_TRUE=''
HAVE_PTHREAD_FALSE=''
HAVE_PTHREAD_TRUE=''
HAVE_PYTHON2_FALSE=''
HAVE_PYTHON2_TRUE=''
HAVE_PYTHON3_FALSE=''
HAVE_PYTHON3_TRUE=''
HAVE_SOCKET_CAN_FALSE=''
HAVE_SOCKET_CAN_TRUE=''
HAVE_VCI_FALSE=''
HAVE_VCI_TRUE=''
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LCOV=''
LD=''
LDFLAGS=''
LIBOBJS=''
LIBS=''
LIBTOOL=''
LIPO=''
LN_S=''
LTLIBOBJS=''
LT_SYS_LIBRARY_PATH=''
MAINT=''
MAINTAINER_MODE_FALSE='#'
MAINTAINER_MODE_TRUE=''
MAKEINFO='${SHELL} /home/joachim/eclipse-workspace/lely-core/missing makeinfo'
MANIFEST_TOOL=''
MKDIR_P='/usr/bin/mkdir -p'
MOSTLYCLEANFILES += $(valgrind_log_files)
MOSTLYCLEANFILES ?=
NM=''
NMEDIT=''
NO_CANFD_FALSE=''
NO_CANFD_TRUE=''
NO_COAPP_MASTER_FALSE=''
NO_COAPP_MASTER_TRUE=''
NO_COAPP_SLAVE_FALSE=''
NO_COAPP_SLAVE_TRUE=''
NO_CO_CSDO_FALSE=''
NO_CO_CSDO_TRUE=''
NO_CO_DCF_FALSE=''
NO_CO_DCF_RESTORE_FALSE=''
NO_CO_DCF_RESTORE_TRUE=''
NO_CO_DCF_TRUE=''
NO_CO_EMCY_FALSE=''
NO_CO_EMCY_TRUE=''
NO_CO_GW_FALSE=''
NO_CO_GW_TRUE=''
NO_CO_GW_TXT_FALSE=''
NO_CO_GW_TXT_TRUE=''
NO_CO_LSS_FALSE=''
NO_CO_LSS_TRUE=''
NO_CO_MASTER_FALSE=''
NO_CO_MASTER_TRUE=''
NO_CO_OBJ_DEFAULT_FALSE=''
NO_CO_OBJ_DEFAULT_TRUE=''
NO_CO_OBJ_FILE_FALSE=''
NO_CO_OBJ_FILE_TRUE=''
NO_CO_OBJ_LIMITS_FALSE=''
NO_CO_OBJ_LIMITS_TRUE=''
NO_CO_OBJ_NAME_FALSE=''
NO_CO_OBJ_NAME_TRUE=''
NO_CO_OBJ_UPLOAD_FALSE=''
NO_CO_OBJ_UPLOAD_TRUE=''
NO_CO_RPDO_FALSE=''
NO_CO_RPDO_TRUE=''
NO_CO_SDEV_FALSE=''
NO_CO_SDEV_TRUE=''
NO_CO_SYNC_FALSE=''
NO_CO_SYNC_TRUE=''
NO_CO_TIME_FALSE=''
NO_CO_TIME_TRUE=''
NO_CO_TPDO_FALSE=''
NO_CO_TPDO_TRUE=''
NO_CO_WTM_FALSE=''
NO_CO_WTM_TRUE=''
NO_CXX_FALSE=''
NO_CXX_TRUE=''
NO_DAEMON_FALSE=''
NO_DAEMON_TRUE=''
NO_RT_FALSE=''
NO_RT_TRUE=''
NO_TESTS_FALSE=''
NO_TESTS_TRUE=''
NO_THREADS_FALSE=''
NO_THREADS_TRUE=''
NO_TOOLS_FALSE=''
NO_TOOLS_TRUE=''
NO_UNIT_TESTS_FALSE=''
NO_UNIT_TESTS_MEMLEAK_FALSE=''
NO_UNIT_TESTS_MEMLEAK_TRUE=''
NO_UNIT_TESTS_TRUE=''
OBJDUMP=''
OBJEXT=''
OTOOL64=''
OTOOL=''
PACKAGE='lely-core'
PACKAGE_BUGREPORT=''
PACKAGE_NAME='Lely core libraries'
PACKAGE_STRING='Lely core libraries 2.3.0'
PACKAGE_TARNAME='lely-core'
PACKAGE_URL=''
PACKAGE_VERSION='2.3.0'
PATH_SEPARATOR=':'
PKG_CONFIG=''
PKG_CONFIG_LIBDIR=''
PKG_CONFIG_PATH=''
PLATFORM_LINUX_FALSE=''
PLATFORM_LINUX_TRUE=''
PLATFORM_POSIX_FALSE=''
PLATFORM_POSIX_TRUE=''
PLATFORM_WIN32_FALSE=''
PLATFORM_WIN32_TRUE=''
PTHREAD_CC=''
PTHREAD_CFLAGS=''
PTHREAD_LIBS=''
PYTHON2=''
PYTHON3=''
RANLIB=''
RC=''
RT_LIBS=''
SCRIPT_EXEC=''
SED='/usr/bin/sed'
SET_MAKE=''
SHELL='/bin/bash'
STRIP='arm-none-eabi-strip'
VALGRIND='valgrind'
VALGRIND_CHECK_RULES='
VALGRIND_ENABLED='yes'
VALGRIND_ENABLED_FALSE='#'
VALGRIND_ENABLED_TRUE=''
VALGRIND_FLAGS ?= --num-callers=30
VALGRIND_LOG_COMPILER = \
VALGRIND_SUPPRESSIONS ?= $(addprefix --suppressions=,$(VALGRIND_SUPPRESSIONS_FILES))
VALGRIND_TESTS_ENVIRONMENT = \
VALGRIND_drd_FLAGS ?=
VALGRIND_helgrind_FLAGS ?= --history-level=approx
VALGRIND_memcheck_FLAGS ?= --leak-check=full --show-reachable=no
VALGRIND_sgcheck_FLAGS ?=
VERSION='2.3.0'
VERSION_MAJOR=''
VERSION_MINOR=''
VERSION_PATCH=''
WITH_PYTHON_FALSE=''
WITH_PYTHON_TRUE=''
ac_ct_AR=''
ac_ct_CC=''
ac_ct_CXX=''
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE=''
am__fastdepCC_FALSE=''
am__fastdepCC_TRUE=''
am__fastdepCXX_FALSE=''
am__fastdepCXX_TRUE=''
am__include='include'
am__isrc=' -I$(srcdir)'
am__leading_dot='.'
am__nodep='_no'
am__quote=''
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
ax_pthread_config=''
bindir='${exec_prefix}/bin'
build='x86_64-pc-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='pc'
check-code-coverage: initial-code-coverage
check-valgrind-$(1)-am:
check-valgrind-am:
code-coverage-capture-hook:
code-coverage-capture: code-coverage-capture-hook
code_coverage_quiet = $(code_coverage_quiet_$(V))
code_coverage_quiet_ = $(code_coverage_quiet_$(AM_DEFAULT_VERBOSITY))
code_coverage_quiet_0 = --quiet
code_coverage_sanitize = $(subst -,_,$(subst .,_,$(1)))
code_coverage_v_genhtml = $(code_coverage_v_genhtml_$(V))
code_coverage_v_genhtml_ = $(code_coverage_v_genhtml_$(AM_DEFAULT_VERBOSITY))
code_coverage_v_genhtml_0 = @echo "  GEN   " $(CODE_COVERAGE_OUTPUT_DIRECTORY);
code_coverage_v_lcov_cap = $(code_coverage_v_lcov_cap_$(V))
code_coverage_v_lcov_cap_ = $(code_coverage_v_lcov_cap_$(AM_DEFAULT_VERBOSITY))
code_coverage_v_lcov_cap_0 = @echo "  LCOV   --capture"\
code_coverage_v_lcov_ign = $(code_coverage_v_lcov_ign_$(V))
code_coverage_v_lcov_ign_ = $(code_coverage_v_lcov_ign_$(AM_DEFAULT_VERBOSITY))
code_coverage_v_lcov_ign_0 = @echo "  LCOV   --remove /tmp/*"\
datadir='${datarootdir}'
datarootdir='${prefix}/share'
define valgrind_tool_rule
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
else
else
else
else ifeq ($$(VALGRIND_ENABLED),yes)
endef
endif
endif
endif
endif
exec_prefix='NONE'
host='arm-none-eabi'
host_alias='arm-none-eabi'
host_cpu='arm'
host_os='eabi'
host_vendor='none'
htmldir='${docdir}'
ifeq ($$(VALGRIND_ENABLED)-$$(ENABLE_VALGRIND_$(1)),yes-yes)
ifeq ($(VALGRIND_ENABLED),yes)
ifneq ($$(TESTS),)
ifneq ($(LIBTOOL),)
includedir='${prefix}/include'
infodir='${datarootdir}/info'
initial-code-coverage:
install_sh='${SHELL} /home/joachim/eclipse-workspace/lely-core/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='NONE'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target='arm-none-eabi'
target_alias=''
target_cpu='arm'
target_os='eabi'
target_vendor='none'
valgrind_drd_flags = --tool=drd $(VALGRIND_drd_FLAGS)
valgrind_enabled_tools=' memcheck helgrind drd'
valgrind_helgrind_flags = --tool=helgrind $(VALGRIND_helgrind_FLAGS)
valgrind_log_files = $(addprefix test-suite-,$(addsuffix .log,$(valgrind_tools)))
valgrind_lt =
valgrind_lt = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=execute
valgrind_memcheck_flags = --tool=memcheck $(VALGRIND_memcheck_FLAGS)
valgrind_quiet = $(valgrind_quiet_$(V))
valgrind_quiet_ = $(valgrind_quiet_$(AM_DEFAULT_VERBOSITY))
valgrind_quiet_0 = --quiet
valgrind_sgcheck_flags = --tool=exp-sgcheck $(VALGRIND_sgcheck_FLAGS)
valgrind_tools='memcheck helgrind drd sgcheck'
valgrind_v_use   = $(valgrind_v_use_$(V))
valgrind_v_use_  = $(valgrind_v_use_$(AM_DEFAULT_VERBOSITY))
valgrind_v_use_0 = @echo "  USE   " $(patsubst check-valgrind-%-am,%,$@):;

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "Lely core libraries"
#define PACKAGE_TARNAME "lely-core"
#define PACKAGE_VERSION "2.3.0"
#define PACKAGE_STRING "Lely core libraries 2.3.0"
#define PACKAGE_BUGREPORT ""
#define PACKAGE_URL ""
#define PACKAGE "lely-core"
#define VERSION "2.3.0"

configure: exit 77
